export default {
  id: 'door_glass_arc',
  name: 'Puerta de vidrio arqueada',
  description: 'Entrada acristalada con iluminación ambiental y señalización sutil.',
  appearance: {
    width: 1,
    height: 2,
    tileSize: 32,
    anchor: { x: 0.5, y: 1 },
    generator: function drawGlassDoor(ctx, { tileSize, pixelWidth, pixelHeight }) {
      ctx.save();
      const frameWidth = Math.max(4, tileSize * 0.18);
      const doorHeight = pixelHeight;
      const doorWidth = pixelWidth;

      const frameGradient = ctx.createLinearGradient(0, 0, 0, doorHeight);
      frameGradient.addColorStop(0, '#212121');
      frameGradient.addColorStop(1, '#484848');
      ctx.fillStyle = frameGradient;
      ctx.fillRect(0, 0, doorWidth, doorHeight);

      ctx.fillStyle = '#37474F';
      ctx.fillRect(frameWidth, frameWidth * 0.5, doorWidth - frameWidth * 2, doorHeight - frameWidth * 1.5);

      const glassGradient = ctx.createLinearGradient(0, frameWidth, 0, doorHeight - frameWidth);
      glassGradient.addColorStop(0, 'rgba(179, 229, 252, 0.85)');
      glassGradient.addColorStop(0.5, 'rgba(129, 212, 250, 0.55)');
      glassGradient.addColorStop(1, 'rgba(100, 181, 246, 0.85)');
      ctx.fillStyle = glassGradient;
      ctx.fillRect(frameWidth * 1.2, frameWidth * 1.2, doorWidth - frameWidth * 2.4, doorHeight - frameWidth * 2.3);

      ctx.fillStyle = 'rgba(255, 255, 255, 0.35)';
      ctx.beginPath();
      ctx.moveTo(frameWidth * 1.3, frameWidth * 1.4);
      ctx.lineTo(frameWidth * 1.3 + tileSize * 0.5, frameWidth * 1.4);
      ctx.lineTo(frameWidth * 1.1, doorHeight - frameWidth * 2.5);
      ctx.lineTo(frameWidth * 1.1 - tileSize * 0.4, doorHeight - frameWidth * 2.8);
      ctx.closePath();
      ctx.fill();

      ctx.strokeStyle = 'rgba(255, 255, 255, 0.4)';
      ctx.lineWidth = 2;
      ctx.beginPath();
      ctx.moveTo(frameWidth * 1.5, doorHeight * 0.2);
      ctx.lineTo(doorWidth - frameWidth * 1.5, doorHeight * 0.2);
      ctx.moveTo(frameWidth * 1.5, doorHeight * 0.75);
      ctx.lineTo(doorWidth - frameWidth * 1.5, doorHeight * 0.75);
      ctx.stroke();

      const handleWidth = tileSize * 0.12;
      const handleHeight = tileSize * 0.8;
      const handleX = doorWidth - frameWidth * 1.4;
      const handleY = doorHeight * 0.45 - handleHeight / 2;
      ctx.fillStyle = '#FFC107';
      ctx.fillRect(handleX, handleY, handleWidth, handleHeight);
      ctx.restore();
    }
  },
  metadata: {
    tags: ['decorative', 'door', 'entrance']
  }
};
